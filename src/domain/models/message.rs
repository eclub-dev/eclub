//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.4

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "message")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: u64,
	pub sender: u64,
	pub receiver: u64,
	pub content_type: u8,
	#[sea_orm(column_type = "Text")]
	pub content: String,
	pub is_read: u8,
	pub create_time: TimeDateTime,
	pub update_time: TimeDateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::user::Entity",
		from = "Column::Receiver",
		to = "super::user::Column::Id",
		on_update = "Restrict",
		on_delete = "Cascade"
	)]
	User2,
	#[sea_orm(
		belongs_to = "super::user::Entity",
		from = "Column::Sender",
		to = "super::user::Column::Id",
		on_update = "Restrict",
		on_delete = "Cascade"
	)]
	User1,
}

impl ActiveModelBehavior for ActiveModel {}
